version: '3.7'

services:
#  keycloakdb:
#    image: postgres
#    ports:
#      - '58669:5432'
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password
#    volumes:
#      - keycloak-data:/var/lib/postgresql/data
#  
#  keycloak:
#    image: sleighzy/keycloak:latest
#    environment:
#      DB_VENDOR: POSTGRES
#      DB_ADDR: keycloakdb
#      DB_DATABASE: keycloak
#      DB_USER: keycloak
#      DB_PASSWORD: password
#      DB_SCHEMA: public
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      KEYCLOAK_HTTP_PORT: 8080
#      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, 
#      # and it shouldn't be used in production without knowledge. It is highly recommended that you read the 
#      # PostgreSQL JDBC driver documentation in order to use it.
#      #JDBC_PARAMS: "ssl=true"
#    ports:
#      - 3255:8080
#    depends_on:
#      - keycloakdb

  recipemanagement-db:
    image: postgres
    restart: always
    ports:
      - '58629:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dev_recipemanagement
    volumes:
      - recipemanagement-data:/var/lib/postgresql/data

  rmq-message-broker:
    image: masstransit/rabbitmq
    restart: always
    ports:
      - '58633:15672' # RabbitMQ Management UI
      - '58632:5672' # RabbitMQ Broker
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest


  jaeger:
    image: jaegertracing/all-in-one:latest
#    port mappings: https://www.jaegertracing.io/docs/1.32/getting-started/
    ports:
      - "58643:5775/udp"
      - "58642:6831/udp"
      - "58644:6832/udp"
      - "58645:5778"
      - "58646:16686"
      - "58647:14250"
      - "58648:14268"
      - "58649:14269"
      - "58650:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.0.1
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        
volumes:
  # compose volumes marker - do not delete
  keycloak-data:
  recipemanagement-data:
